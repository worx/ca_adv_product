<?php

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
function ca_adv_product_install() {  
  // Update the imce roles profiles to set the Admin and writer role.
  $imce_roles_profiles = variable_get('imce_roles_profiles');

  $imce_roles_profiles_vaule = array (
    'weight' => '-9',
    'public_pid' => 2,
    'private_pid' => 2,
  );

  $imce_roles_profiles[60140418] = $imce_roles_profiles_vaule;

  variable_set('imce_roles_profiles', $imce_roles_profiles);

  // Set the Pathauto for the node.
  variable_set('pathauto_node_ca_adv_product_category_pattern', 'products/[node:adv_product_category_hierarchy]/[node:worx_title]');

  variable_set('pathauto_node_ca_adv_product_option_pattern', '[node:adv_product_product_path]/[node:worx_title]');

  variable_set('pathauto_node_ca_adv_product_pattern', '[node:adv_product_product_path]/[node:worx_title]');
  
  variable_set('pathauto_punctuation_slash', '2');

  // Get the worx_aurora_base_enable variable to default set if not already set.
  variable_get('worx_aurora_base_enable', 'worx_aurora_base_disabled');
  
  /**
   * Sets the Product Admin, Administrator and Webmaster to have permission to
   * create files, access media browser,
   * add media from remote sources, assign node weight.
   */
  user_role_change_permissions(60140418, 
    array(
      'create files' => TRUE,
      'access media browser' => TRUE,
      'add media from remote sources' => TRUE,
      'assign node weight' => TRUE,
    )
  );

  // Set the permissions for Administrator
  user_role_change_permissions(3, 
    array(
      'create files' => TRUE,
      'access media browser' => TRUE,
      'add media from remote sources' => TRUE,
      'assign node weight' => TRUE,
    )
  );

  // Set the permissions for Webmaster
  user_role_change_permissions(4, 
    array(
      'create files' => TRUE,
    )
  );
}

/**
 * Setting worx_aurora_base_enable default so that panels can work corretly when aura base feature is not enabled.
 * Enable the taxonomy/term/%taxonomy_term page
 * Set the Administer Taxonomy for Blog Admin
 */
function ca_adv_product_update_7000() {
  // Get the worx_aurora_base_enable variable to default set if not already set.
  variable_get('worx_aurora_base_enable', 'worx_aurora_base_disabled');

  /**
   * Sets the Product Admin Admin role to have permission to
   * create files, access media browser,
   * add media from remote sources, assign node weight.
   */
  user_role_change_permissions(60140418, 
    array(
      'create files' => TRUE,
      'access media browser' => TRUE,
      'add media from remote sources' => TRUE,
      'assign node weight' => TRUE,
    )
  );
}

/**
 * Set the permissions for Services Admin, Webmaster and Administrator as a one time event rather than handled with features to allow additonal roles to be 
 * given these permissions without overridding the feature.
 */
function ca_adv_product_update_7001() {
  // Set the permissions for Administrator
  user_role_change_permissions(3, 
    array(
      'create files' => TRUE,
      'access media browser' => TRUE,
      'add media from remote sources' => TRUE,
      'assign node weight' => TRUE,
    )
  );

  // Set the permissions for Webmaster
  user_role_change_permissions(4, 
    array(
      'create files' => TRUE,
      'access media browser' => TRUE,
      'add media from remote sources' => TRUE,
      'assign node weight' => TRUE,
    )
  );
}

/**
 * Updated the path to allow for full hierarchy
 */
function ca_adv_product_update_7002() {
  $setslash = FALSE;

  $catpath = variable_get('pathauto_node_ca_adv_product_category_pattern', '');
  if ($catpath == 'product/[node:field_ca_adv_category_parent]/[node:title]' || $catpath == '') {
    variable_set('pathauto_node_ca_adv_product_category_pattern', 'products/[node:adv_product_category_hierarchy]/[node:worx_title]');

    $setslash = TRUE;
  }

  $optpath = variable_get('pathauto_node_ca_adv_product_category_pattern', '');
  if ($optpath == 'product/[node:field_ca_ad_prod_parent_category]/[node:title]' || $optpath == '') {
    variable_set('pathauto_node_ca_adv_product_option_pattern', '[node:adv_product_product_path]/[node:worx_title]');

    $setslash = TRUE;
  }

  $prodpath = variable_get('pathauto_node_ca_adv_product_pattern', '');
  if ($prodpath == 'product/[node:field_ca_ad_prod_parent_category]/[node:title]' || $prodpath == '') {
    variable_set('pathauto_node_ca_adv_product_pattern', '[node:adv_product_product_path]/[node:worx_title]');

    $setslash = TRUE;
  }
  
  if ($setslash === TRUE) {
    // Set the Pathauto Slash setting to do not remove because of the hierarchy fix to product.
    variable_set('pathauto_punctuation_slash', '2');
  }
}